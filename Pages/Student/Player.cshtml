@page
@model HAS.MyPractice.Web.Pages.Student.PlayerModel
@{
    ViewData["Title"] = "Player";
}
<div class="container mediaDetails">
    <div class="row">
        <div class="col mt-3" style="color: rgba(0,0,0,.5); cursor: pointer">
            <a asp-page="/Student/Library">
                <i class="fas fa-angle-left fa-2x"></i>
            </a>
            <div class="float-right">
                <!-- <i class="fas fa-th fa-2x mr-3"></i> -->
                <!-- <i class="far fa-bookmark fa-2x"></i> -->
            </div>
        </div>
    </div>
    <div class="row mt-3">
        <div class="col text-center">
            <h6>@Model.Media.Author</h6>
            <h4>@Model.Media.Title</h4>
            <!-- <span>
                <i class="fas fa-star"></i>
                <i class="fas fa-star"></i>
                <i class="fas fa-star"></i>
                <i class="fas fa-star"></i>
                <i class="fas fa-star"></i>
            </span> -->
            <div class="mt-2" style="width:100%">
                <img src="~/images/fpo.png" width="300">
            </div>
            <div class="audioContainer">
                <audio id="player" controls>
                    <source src="@Model.Media.Uri" type="audio/mp4" />
                </audio>
            </div>
            
            <div class="text-left mt-3 mx-auto" style="width:335px">
                <p>@Model.Media.Description</p>
            </div>
        </div>
    </div>
</div>
@section Styles
{
<link rel="stylesheet" href="https://cdn.plyr.io/3.5.6/plyr.css" />
<style>
    .audioContainer {
	    margin: 25px auto;
	    max-width: 300px;
	    box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
    }
    .mediaDetails a, 
    .mediaDetails a:link, 
    .mediaDetails a:visited, 
    .mediaDetails a:hover {
        color: #343a40 !important;
        font-weight: 600;
        text-decoration: none;
    }
    .plyr__controls {
        justify-content: center !important;
    }

    .plyr__volume {
        flex: auto;
        flex-grow: 0;
        flex-shrink: 0;
        flex-basis: 30%;
    }
</style>
}
@section Scripts
{
    <script src="https://cdn.plyr.io/3.5.6/plyr.polyfilled.js"></script>
    <script>

    const controls = `
        <div class="plyr__controls">
            <button type="button" class="plyr__control" aria-label="Play, {title}" data-plyr="play">
                <svg class="icon--pressed" role="presentation"><use xlink:href="#plyr-pause"></use></svg>
                <svg class="icon--not-pressed" role="presentation"><use xlink:href="#plyr-play"></use></svg>
                <span class="label--pressed plyr__tooltip" role="tooltip">Pause</span>
                <span class="label--not-pressed plyr__tooltip" role="tooltip">Play</span>
            </button>
            <button type="button" class="plyr__control" data-plyr="rewind">
                <svg role="presentation"><use xlink:href="#plyr-rewind"></use></svg>
                <span class="plyr__tooltip" role="tooltip">Rewind {seektime} secs</span>
            </button>
            <div class="plyr__progress">
                <input data-plyr="seek" type="range" min="0" max="100" step="0.01" value="0" aria-label="Seek">
                <progress class="plyr__progress__buffer" min="0" max="100" value="0">% buffered</progress>
                <span role="tooltip" class="plyr__tooltip">00:00</span>
            </div>
            <button type="button" class="plyr__control" data-plyr="fast-forward">
                <svg role="presentation"><use xlink:href="#plyr-fast-forward"></use></svg>
                <span class="plyr__tooltip" role="tooltip">Forward {seektime} secs</span>
            </button>
            <div class="plyr__time plyr__time--current" aria-label="Current time">00:00</div>
            <div class="plyr__volume">
                <input data-plyr="volume" type="range" min="0" max="1" step="0.05" value="1" autocomplete="off" aria-label="Volume">
            </div>
        </div>
        `;


    // Change "{}" to your options:
    // https://github.com/sampotts/plyr/#options
        const player = new Plyr('#player', { controls });
        player.speed = 1;

    // Expose player so it can be used from the console
    window.player = player;
    </script>
}
